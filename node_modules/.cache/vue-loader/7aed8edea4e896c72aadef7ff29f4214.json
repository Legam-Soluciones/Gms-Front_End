{"remainingRequest":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\src\\components\\Categorias\\agenda.vue?vue&type=style&index=0&id=e9b1e44a&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\src\\components\\Categorias\\agenda.vue","mtime":1596755342373},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Digital\\Desktop\\GMSvueproyect\\gms-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnYtZXZlbnQtZHJhZ2dhYmxlIHsNCiAgcGFkZGluZy1sZWZ0OiA2cHg7DQp9DQoNCi52LWV2ZW50LXRpbWVkIHsNCiAgdXNlci1zZWxlY3Q6IG5vbmU7DQogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7DQp9DQoNCi52LWV2ZW50LWRyYWctYm90dG9tIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsZWZ0OiAwOw0KICByaWdodDogMDsNCiAgYm90dG9tOiA0cHg7DQogIGhlaWdodDogNHB4Ow0KICBjdXJzb3I6IG5zLXJlc2l6ZTsNCg0KICAmOjphZnRlciB7DQogICAgZGlzcGxheTogbm9uZTsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgbGVmdDogNTAlOw0KICAgIGhlaWdodDogNHB4Ow0KICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCB3aGl0ZTsNCiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7DQogICAgd2lkdGg6IDE2cHg7DQogICAgbWFyZ2luLWxlZnQ6IC04cHg7DQogICAgb3BhY2l0eTogMC44Ow0KICAgIGNvbnRlbnQ6ICcnOw0KICB9DQoNCiAgJjpob3Zlcjo6YWZ0ZXIgew0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICB9DQp9DQo="},{"version":3,"sources":["agenda.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"agenda.vue","sourceRoot":"src/components/Categorias","sourcesContent":["<template>\r\n  <v-row class=\"fill-height\">\r\n    <v-col>\r\n      <v-sheet height=\"600\">\r\n        <v-calendar\r\n          ref=\"calendar\"\r\n          v-model=\"value\"\r\n          color=\"primary\"\r\n          type=\"4day\"\r\n          :events=\"events\"\r\n          :event-color=\"getEventColor\"\r\n          :event-ripple=\"false\"\r\n          @change=\"getEvents\"\r\n          @mousedown:event=\"startDrag\"\r\n          @mousedown:time=\"startTime\"\r\n          @mousemove:time=\"mouseMove\"\r\n          @mouseup:time=\"endDrag\"\r\n          @mouseleave.native=\"cancelDrag\"\r\n        >\r\n          <template #event=\"{ event, timed, eventSummary }\">\r\n            <div\r\n              class=\"v-event-draggable\"\r\n              v-html=\"eventSummary()\"\r\n            ></div>\r\n            <div\r\n              v-if=\"timed\"\r\n              class=\"v-event-drag-bottom\"\r\n              @mousedown.stop=\"extendBottom(event)\"\r\n            ></div>\r\n          </template>\r\n        </v-calendar>\r\n      </v-sheet>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      value: '',\r\n      events: [],\r\n      colors: ['#2196F3', '#3F51B5', '#673AB7', '#00BCD4', '#4CAF50', '#FF9800', '#757575'],\r\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\r\n      dragEvent: null,\r\n      dragStart: null,\r\n      createEvent: null,\r\n      createStart: null,\r\n      extendOriginal: null,\r\n    }),\r\n    methods: {\r\n      startDrag ({ event, timed }) {\r\n        if (event && timed) {\r\n          this.dragEvent = event\r\n          this.dragTime = null\r\n          this.extendOriginal = null\r\n        }\r\n      },\r\n      startTime (tms) {\r\n        const mouse = this.toTime(tms)\r\n\r\n        if (this.dragEvent && this.dragTime === null) {\r\n          const start = this.dragEvent.start\r\n\r\n          this.dragTime = mouse - start\r\n        } else {\r\n          this.createStart = this.roundTime(mouse)\r\n          this.createEvent = {\r\n            name: `Event #${this.events.length}`,\r\n            color: this.rndElement(this.colors),\r\n            start: this.createStart,\r\n            end: this.createStart,\r\n            timed: true,\r\n          }\r\n\r\n          this.events.push(this.createEvent)\r\n        }\r\n      },\r\n      extendBottom (event) {\r\n        this.createEvent = event\r\n        this.createStart = event.start\r\n        this.extendOriginal = event.end\r\n      },\r\n      mouseMove (tms) {\r\n        const mouse = this.toTime(tms)\r\n\r\n        if (this.dragEvent && this.dragTime !== null) {\r\n          const start = this.dragEvent.start\r\n          const end = this.dragEvent.end\r\n          const duration = end - start\r\n          const newStartTime = mouse - this.dragTime\r\n          const newStart = this.roundTime(newStartTime)\r\n          const newEnd = newStart + duration\r\n\r\n          this.dragEvent.start = newStart\r\n          this.dragEvent.end = newEnd\r\n        } else if (this.createEvent && this.createStart !== null) {\r\n          const mouseRounded = this.roundTime(mouse, false)\r\n          const min = Math.min(mouseRounded, this.createStart)\r\n          const max = Math.max(mouseRounded, this.createStart)\r\n\r\n          this.createEvent.start = min\r\n          this.createEvent.end = max\r\n        }\r\n      },\r\n      endDrag () {\r\n        this.dragTime = null\r\n        this.dragEvent = null\r\n        this.createEvent = null\r\n        this.createStart = null\r\n        this.extendOriginal = null\r\n      },\r\n      cancelDrag () {\r\n        if (this.createEvent) {\r\n          if (this.extendOriginal) {\r\n            this.createEvent.end = this.extendOriginal\r\n          } else {\r\n            const i = this.events.indexOf(this.createEvent)\r\n            if (i !== -1) {\r\n              this.events.splice(i, 1)\r\n            }\r\n          }\r\n        }\r\n\r\n        this.createEvent = null\r\n        this.createStart = null\r\n        this.dragTime = null\r\n        this.dragEvent = null\r\n      },\r\n      roundTime (time, down = true) {\r\n        const roundTo = 15 // minutes\r\n        const roundDownTime = roundTo * 60 * 1000\r\n\r\n        return down\r\n          ? time - time % roundDownTime\r\n          : time + (roundDownTime - (time % roundDownTime))\r\n      },\r\n      toTime (tms) {\r\n        return new Date(tms.year, tms.month - 1, tms.day, tms.hour, tms.minute).getTime()\r\n      },\r\n      getEventColor (event) {\r\n        const rgb = parseInt(event.color.substring(1), 16)\r\n        const r = (rgb >> 16) & 0xFF\r\n        const g = (rgb >> 8) & 0xFF\r\n        const b = (rgb >> 0) & 0xFF\r\n\r\n        return event === this.dragEvent\r\n          ? `rgba(${r}, ${g}, ${b}, 0.7)`\r\n          : event === this.createEvent\r\n            ? `rgba(${r}, ${g}, ${b}, 0.7)`\r\n            : event.color\r\n      },\r\n      getEvents ({ start, end }) {\r\n        const events = []\r\n\r\n        const min = new Date(`${start.date}T00:00:00`).getTime()\r\n        const max = new Date(`${end.date}T23:59:59`).getTime()\r\n        const days = (max - min) / 86400000\r\n        const eventCount = this.rnd(days, days + 20)\r\n\r\n        for (let i = 0; i < eventCount; i++) {\r\n          const timed = this.rnd(0, 3) !== 0\r\n          const firstTimestamp = this.rnd(min, max)\r\n          const secondTimestamp = this.rnd(2, timed ? 8 : 288) * 900000\r\n          const start = firstTimestamp - (firstTimestamp % 900000)\r\n          const end = start + secondTimestamp\r\n\r\n          events.push({\r\n            name: this.rndElement(this.names),\r\n            color: this.rndElement(this.colors),\r\n            start,\r\n            end,\r\n            timed,\r\n          })\r\n        }\r\n\r\n        this.events = events\r\n      },\r\n      rnd (a, b) {\r\n        return Math.floor((b - a + 1) * Math.random()) + a\r\n      },\r\n      rndElement (arr) {\r\n        return arr[this.rnd(0, arr.length - 1)]\r\n      },\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.v-event-draggable {\r\n  padding-left: 6px;\r\n}\r\n\r\n.v-event-timed {\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n}\r\n\r\n.v-event-drag-bottom {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 4px;\r\n  height: 4px;\r\n  cursor: ns-resize;\r\n\r\n  &::after {\r\n    display: none;\r\n    position: absolute;\r\n    left: 50%;\r\n    height: 4px;\r\n    border-top: 1px solid white;\r\n    border-bottom: 1px solid white;\r\n    width: 16px;\r\n    margin-left: -8px;\r\n    opacity: 0.8;\r\n    content: '';\r\n  }\r\n\r\n  &:hover::after {\r\n    display: block;\r\n  }\r\n}\r\n</style>\r\n"]}]}